name: Node.JS Testing Workflow

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Install and Configure Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Verify Weather Node is Installed or Not
        run: node --version


  functional-testing:
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Functional Testing
        run: |
          echo "Functional Testing is going on"
          sleep 5
  component-analysis:
    runs-on: ubuntu-latest
    needs: functional-testing
    steps:
      - name: Checkout the Code
        uses: actions/checkout@v2

      - name: Install the Libraries or Node Modules
        run: npm install

      - name: Perform Node.js Audit and Output to Json file
        run: npm audit --json >> node-audit-results.json
        continue-on-error: true

      - name: List the files available
        run: ls
      
      - name: Upload the Output as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: NodeAudit Output
          path: node-audit-results.json
        if: always()
        

  deployment:
    runs-on: ubuntu-latest
    needs: [component-analysis, frontend-static-scan, backend-static-scan, njsscan]
    steps: 
      - name: Deployment Steps
        run: |
          echo "Deployment is going on"
          sleep 30
  frontend-static-scan:
    runs-on: ubuntu-latest
    needs: functional-testing
    steps:
      - uses: actions/checkout@v2

      - run: npm install

      - run: npm install -g retire

      - run: retire --outputformat json --outputpath retirejs-report.json --severity high
        continue-on-error: true

      - name: Upload the Output as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: RetireJS Output
          path: retirejs-report.json
        if: always()

  backend-static-scan:
    runs-on: ubuntu-latest
    needs: functional-testing
    steps:
      - uses: actions/checkout@v2

      - name: Verify Pip
        run: pip --version

      - name: Install Safety
        run: pip install safety

      - name: Run Safety
        run: safety check -r requirements.txt --json | tee backend-static-scan-output.json
        continue-on-error: true

      - uses: actions/upload-artifact@v2
        with:
          name: SafetyOutput
          path: backend-static-scan-output.json
        if: always()
  njsscan:
    runs-on: ubuntu-latest
    needs: functional-testing
    name: njsscan check
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@master
      with:
        args: '.'
